/// <reference types="react" />
import { ReactType } from 'react';
export declare type Options = {
    params?: string | Array<string>;
    match?: string;
    exactly?: boolean;
    state?: string | Array<string>;
    routeComponent?: ReactType;
    routeProps?: any;
    queryParams?: string | Array<string>;
};
/**
 * HOC for extracting router params.
 *
 * Example:
 *
 * ```typescript
 * const ShowName = withParams({params: 'name', match: '/user/:name'})(({name}) =>
 *   <span>{name}</span>
 * )
 * ```
 *
 * ```typescript
 * const ShowIdAndName = withParams({params: ['id', 'name'], match: '/user/:id/:name'})(({id, name}) =>
 *   <span>{id}{name}</span>
 * )
 * ```
 */
export declare const withParams: ({params: paramsNames, match, exactly, state, routeComponent: Route, routeProps, queryParams}?: Options) => (WrappedComponent: any) => any;
